apply plugin: 'com.android.application'
//apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.yj.cosmetics"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true }
        }

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64' //
        }


        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "44ce0e70b6a1908dc6495b99", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

    }
    buildTypes {
        release {
            minifyEnabled false
            //shrinkResources true //在gradle使用shrinkResources去除无用资源，效果非常好。
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }
    }


    sourceSets{
        main {
            //jni库的调用会到资源文件夹下libs里面找so文件
            jniLibs.srcDirs = ['libs']
        }
    }


    signingConfigs {
        release {
            keyAlias 'rob'
            keyPassword 'yjrobust'
//            storeFile rootProject.file("keystore/wxkey.jks")
            storeFile file('E:/Cosmetic/robust.jks')
            //填写你本地的路径
            storePassword 'yjrobust'
        }
     debug {
            keyAlias 'rob'
            keyPassword 'yjrobust'
//            storeFile rootProject.file("keystore/wxkey.jks")
         storeFile file('E:/Cosmetic/robust.jks')
            //填写你本地的路径
            storePassword 'yjrobust'
        }
    }

    android {
        lintOptions {
            checkReleaseBuilds false
            // Or, if you prefer, you can continue to check for errors in release builds,
            // but continue the build even when errors are found:
            abortOnError false
        }
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
        // … and any other excludes go here
    }
    defaultConfig {
        multiDexEnabled true
    }
}



dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.0.+'
    implementation 'com.jude:rollviewpager:1.4.6'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.google.code.gson:gson:2.4'
    implementation 'com.squareup.okio:okio:1.11.0'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.android.support:support-annotations:21.0.2'
    implementation 'com.jakewharton:butterknife:8.5.1'
    implementation 'com.jakewharton:butterknife-compiler:8.5.1'
    implementation(name: 'alipaySdk-15.6.2-20190416165036', ext: 'aar')
    implementation files('libs/rxjava-1.1.1.jar')
    implementation files('libs/rxandroid-1.1.1.jar')
    implementation files('libs/okhttputils.jar')
    implementation files('libs/ShareSDK-Core-2.8.2.jar')
    implementation project(':gallery')
    implementation project(':pickerview')
    implementation project(':sobotsdk')
    implementation 'com.android.support:multidex:1.0.1'
    implementation project(path: ':xrecyclerview')
}
